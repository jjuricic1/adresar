{"version":3,"sources":["components/Poruka.js","services/poruke.js","App.js","index.js"],"names":["Poruka","poruka","uredi","ukloni","className","ime","email","onClick","osnovniUrl","axios","get","noviObjekt","post","id","put","delete","App","props","useState","poruke","postaviPoruke","unosIme","postaviUnosIme","unosEmail","postaviUnosEmail","idNovo","postaviidNovo","unosImeNovo","postaviUnosImeNovo","unosEmailNovo","postaviUnosEmailNovo","unosImeFilter","postaviUnosImeFilter","useEffect","porukeServer","then","response","data","query","fporuke","filter","el","toLowerCase","indexOf","porukeZaIspis","length","placeholder","value","onChange","e","target","onSubmit","console","log","map","p","catch","error","window","alert","hidden","type","key","find","preventDefault","statusText","concat","htmlFor","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e2d57d0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Poruka = ({ poruka, uredi, ukloni }) => {  \r\n   \r\n  \r\n  return (\r\n    <li className=\"poruka list-group-item\">\r\n      {poruka.ime} ({poruka.email})\r\n\r\n      <button onClick={uredi} className=\"btn btn-outline-secondary ml-4\">Uredi</button>\r\n      <button onClick={ukloni} className=\"btn btn-outline-danger ml-4\">Ukloni</button>\r\n    </li>\r\n  )\r\n  }\r\n\r\nexport default Poruka","import axios from 'axios'\r\n//const osnovniUrl = '/api/poruke'\r\nconst osnovniUrl = 'http://localhost:3001/api/poruke'\r\n\r\nconst dohvatiSve = () => {\r\n    return axios.get(osnovniUrl);\r\n}\r\n\r\nconst stvori = noviObjekt => {\r\n    return axios.post(osnovniUrl, noviObjekt)\r\n}\r\n\r\nconst osvjezi = (id, noviObjekt) => {\r\n    return axios.put(`${osnovniUrl}/${id}`, noviObjekt)\r\n}\r\n\r\nconst brisi = (id) => {\r\n    return axios.delete(`${osnovniUrl}/${id}`)\r\n}\r\nexport default {\r\n    //imena pod kojima exportamo f-je :\r\n    dohvatiSve: dohvatiSve,\r\n    stvori: stvori,\r\n    osvjezi: osvjezi,\r\n    brisi:brisi\r\n}\r\n// ili export default { dohvatiSve, stvori, osvjezi}","import React, {useState, useEffect} from 'react'\nimport Poruka from './components/Poruka'\nimport porukeServer from './services/poruke'\n\n\n\nconst App = (props) => {\n  const [ poruke, postaviPoruke] = useState([])\n  const [ unosIme, postaviUnosIme] = useState('')\n  const [ unosEmail, postaviUnosEmail] = useState('')\n\n  const [ idNovo, postaviidNovo] = useState('')\n  const [ unosImeNovo, postaviUnosImeNovo] = useState('')\n  const [ unosEmailNovo, postaviUnosEmailNovo] = useState('')\n\n  const [ unosImeFilter, postaviUnosImeFilter] = useState('')\n\n  useEffect( () => {\n      //console.log('effect hook');\n      porukeServer.dohvatiSve()\n      .then( (response) => { \n      //console.log(\"podaci ucitani\");\n      postaviPoruke(response.data)\n   })} \n  ,[])\n \n  \n  let fporuke = filterItems(poruke, unosImeFilter);\n  const porukeZaIspis = fporuke.length >= 0 ? fporuke: poruke\n \n  const novaPoruka = (e) => {\n    e.preventDefault()  \n    //console.log('Klik ', e.target) \n    const noviObjekt = {\n        //id: poruke.length + 1,  //ovaj dio radi server\n        ime: unosIme,\n        email: unosEmail  \n      }\n\n    porukeServer.stvori(noviObjekt)\n    .then(\n        (response) => {\n            console.log(response.statusText);\n            //console.log(response.status)\n            postaviPoruke(poruke.concat(response.data)) \n            postaviUnosIme('')\n            postaviUnosEmail('')\n        }\n    )\n    .catch(error => {\n      window.alert(error.response.data.error);\n     })\n}\n  const promjenaUnosaIme = (e) => {\n    //console.log(e.target.value);\n    postaviUnosIme(e.target.value)\n  }\n  const promjenaUnosaEmail = (e) => {\n    //console.log(e.target.value);\n    postaviUnosEmail(e.target.value)\n  }\n  const promjenaUnosaImeNovo = (e) => {\n    //console.log(e.target.value);\n    postaviUnosImeNovo(e.target.value)\n  }\n  const promjenaidNovo = (e) => {\n    //console.log(e.target.value);\n    postaviidNovo(e.target.value)\n  }\n  const promjenaUnosaEmailNovo = (e) => {\n    //console.log(e.target.value);\n    postaviUnosEmailNovo(e.target.value)\n  }\n  const promjenaUnosaImeFilter = (e) => {\n    postaviUnosImeFilter(e.target.value);\n\n  }\n\n  function filterItems(arr, query) {\n    return arr.filter(function(el) {\n        return el['ime'].toLowerCase().indexOf(query.toLowerCase()) !== -1\n    })\n  }\n  \n  const ukloniPoruku = (id) => {\n    porukeServer\n    .brisi(id)\n    .then( response => {\n      console.log(response);\n      postaviPoruke(poruke.filter(p => p.id !== id))\n    })\n    .catch(error => {\n      window.alert(error.response.data.error);\n     })\n  }\n\n  const uredi = (id) => {\n\n    const poruka = poruke.find(p => p.id === id)\n\n    postaviidNovo(poruka.id)\n    postaviUnosImeNovo(poruka.ime)\n    postaviUnosEmailNovo(poruka.email)\n\n  }\n  const urediPoruku = () => {\n\n    let id = idNovo;\n    const novaPoruka = {\n        id: id,\n        ime: unosImeNovo,\n        email: unosEmailNovo\n        \n    }\n    porukeServer\n    .osvjezi(id, novaPoruka)\n    .then(\n        (response) => {\n            console.log(response);\n            postaviPoruke(\n                poruke.map(p => p.id !== id ? p : response.data) \n            )\n        }\n    )\n    .catch(error => {\n      window.alert(error.response.data.error);\n     })\n  }\n\n  \n    return (\n      <div className=\"container row pt-4 mt-4\">\n        <div className=\"col-md-8\">\n          <h2 className=\"text-left text-light\">ADRESAR</h2>\n          <div className=\"form-group\">\n              <input placeholder=\"Unesi ime za filtriranje...\" value={unosImeFilter} onChange={promjenaUnosaImeFilter} id=\"imefilter\" className=\"form-control text-right\"></input>\n          </div>\n\n        <div className=\"form-group\">\n          <div className=\"text-right mr-0 pr-0 mt-4\">\n            <form onSubmit={urediPoruku}>\n                <input value={idNovo} onChange={promjenaidNovo} id=\"idnovo\" className=\"form-control\" hidden></input>\n                <div className=\"form-group\">\n                  <input value={unosImeNovo} onChange={promjenaUnosaImeNovo} id=\"imenovo\" className=\"form-control update text-right mb-1\"></input>\n                  <input value={unosEmailNovo} onChange={promjenaUnosaEmailNovo} id=\"emailnovo\" className=\"form-control update text-right\"/>\n                  <button type='submit' className=\"btn btn-outline-secondary mt-2\">Spremi promjene</button>\n                </div>\n            </form>\n          </div>\n        </div>\n     \n          <ul className=\"text-right list-group border border-secondary\">\n              {porukeZaIspis.map(p =>\n                  <Poruka \n                  key={p.id} \n                  poruka={p} \n                  ukloni={\n                    () => ukloniPoruku(p.id)\n                  }\n                  uredi={\n                    () => uredi(p.id)\n                  }\n                  />\n              )}        \n          </ul>\n     \n        </div>\n        <div className=\"col-md-4\">\n        <h2 id=\"sakrij\">ADRESAR</h2>\n          <form onSubmit={novaPoruka} className=\"card p-4 border-success\"> \n          <legend className=\"card-title text-success\">Novi kontakt</legend>\n              <div className=\"form-group\">\n                <label htmlFor=\"ime\">Ime i Prezime:</label>\n                <input value={unosIme} onChange={promjenaUnosaIme} id=\"ime\" className=\"form-control\"/>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email:</label>\n                <input value={unosEmail} onChange={promjenaUnosaEmail} id=\"email\" className=\"form-control\"/>\n              </div>\n              <button type='submit' className=\"btn btn-success\">Dodaj</button>\n          </form>\n        </div>\n\n        <footer class=\"footer font-small text-muted text-center\">\n        <div class=\"footer-copyright text-center py-2 h-50\">\n                  Josipa Juricic - OARWA - PMFST - 2020.\n        </div>\n        </footer>\n\n      </div>\n    )\n }\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom' \nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}